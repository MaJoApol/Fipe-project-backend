// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  @@map("users")
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  birthdate  DateTime?
  contact    String?
  nationalId String    @unique
  email      String    @unique
  password   String     
  token      String?   @unique

  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
  createdBy  String    @default("self")  //@db.Uuid
  updatedBy  String?   @db.Uuid
  deletedBy  String?   @db.Uuid
}

model FuelTypes{
  id      String       @id @default(uuid()) @db.Uuid
  name    String
  abbreviation String

  isDeleted  Boolean?   @default(false)      //aaaaaaaaaaaaaaaaaaaaa
  createdAt  DateTime?  @default(now())      //aaaaaaaaaaaaaaaaaaaaa
  updatedAt  DateTime?
  deletedAt  DateTime?
  createdBy  String?    @db.Uuid             //aaaaaaaaaaaaaaaaaaaaa
  updatedBy  String?   @db.Uuid
  deletedBy  String?   @db.Uuid
}

model Brands{
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  fipeCode   String?

  fkModels   Models[]

  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
  createdBy  String    @db.Uuid
  updatedBy  String?   @db.Uuid
  deletedBy  String?   @db.Uuid
}

model Models{
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid 
  name      String
  fipeCode  String? 
  brandsId  String     @db.Uuid 
  
  brands    Brands     @relation(fields: [brandsId], references: [id])    

  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
  deletedAt  DateTime?
  createdBy  String    @db.Uuid
  updatedBy  String?   @db.Uuid
  deletedBy  String?   @db.Uuid
}


